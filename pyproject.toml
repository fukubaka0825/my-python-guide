[project]
name = "xxxxxxxxxxxx"
version = "0.0.1"
description = "xxxxxxxxxxx"
readme = "README.md"
requires-python = "<4.0,>=3.10"
authors = [
    {name = "fukubaka0825", email = "st5818129@gmail.com"},
]
dependencies = [
    "fastapi<1.0.0,>=0.111.0",
    "python-json-logger<3.0.0,>=2.0.7",
    "numpy<2.0.0,>=1.24.2",
    "starlette<1.0.0,>=0.25.0",
    "uvicorn<1.0.0,>=0.20.0",
    "uvloop<1.0.0,>=0.17.0",
    "types-pytz<2023.0.0.0,>=2022.7.1.2",
    "boto3<2.0.0,>=1.35.71",
    "urllib3<2.0.0,>=1.26.18",
    "langfuse<3.0.0,>=2.54.1",
    "pytz>=2024.2",
]

[dependency-groups]
dev = [
    "taskipy<2.0.0,>=1.10.3",
    "mypy<2.0.0,>=1.0.0",
    "black<24.0.0,>=23.1.0",
    "pytest==8.2.1",
    "pep8-naming<1.0.0,>=0.13.3",
    "pytest-mock<4.0.0,>=3.10.0",
    "pytest-cov<5.0.0,>=4.0.0",
    "ruff<1.0.0,>=0.0.262",
]

[tool.black]
line-length = 260

[tool.mypy]
# エラー時のメッセージを詳細表示
show_error_context = true
# エラー発生箇所の行数/列数を表示
show_column_numbers = true
# import 先のチェックを行わない (デフォルトだとサードパーティーライブラリまでチェックする)
ignore_missing_imports = true
# 関数定義の引数/戻り値に型アノテーション必須
disallow_untyped_defs = true
# デフォルト引数に None を取る場合型アノテーションに Optional 必須
no_implicit_optional = true
# 戻り値が Any 型ではない関数の戻り値の型アノテーションが Any のとき警告
warn_return_any = true
# mypy エラーに該当しない箇所に `# type: ignore` コメントが付与されていたら警告
# ※ `# type: ignore` が付与されている箇所は mypy のエラーを無視出来る
warn_unused_ignores = true
# 冗長なキャストに警告
warn_redundant_casts = true

[tool.ruff]
lint.ignore = []
lint.select = [
    "E",
    "F",
    "W",
    "I",
    "B"
]
line-length = 260

[tool.taskipy.tasks]
fmt_lint = { cmd = "task fmt && task lint", help = "format and lint" }
test = { cmd = "pytest -s -vv --cov=. --cov-branch", help = "runs all unit tests" }
fmt = { cmd = "task fmt_black && task fmt_isort", help = "format code" }
lint = { cmd = "task lint_black && task lint_ruff && task lint_mypy", help = "exec lint" }
fmt_black = "black assets tests"
fmt_isort = "ruff check assets tests --select I --fix-only --exit-zero"
lint_ruff = "ruff check assets tests"
lint_mypy = "mypy assets tests"
lint_black = "black --check assets tests"
